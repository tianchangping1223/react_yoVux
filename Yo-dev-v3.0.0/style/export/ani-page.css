@charset "UTF-8";
/**
 * Yo框架全局base定义
 * 本文件与variables不同地方在于，这里所定义的map可以使用在variables和任何地方
 * lib中map使用“_”开头，本文件中不使用"_"
 * base ⇌ extra
 */
/**
 * Yo框架全局base定义
 * 本文件与variables不同地方在于，这里所定义的map可以使用在variables和任何地方
 * 本文件中map使用"_"开头，extra中不使用"_"
 * base ⇌ extra
 */
/**
 * 合并base和extra中的同类base map
 * 用以解决业务方升级Yo时需比base和extra的一致性
 * 当extra为空时，base map将以base文件里的定义作为默认值
 * 当extra不为空时，base map使用extra文件里的定义
 */
/**
 * Yo框架全局Variables
 * Yo基础变量map，如果不想定义某属性，将其value设置为null；
 * Yo仅使用2种长度单位：px用于边框，rem用于除边框之外的所有地方
 * variables中map使用“_”开头，本文件中不使用"_"
 * variables ⇌ config
 */
/**
 * Yo框架全局Variables
 * Yo基础变量map，如果不想定义某属性，将其value设置为null
 * Yo仅使用2种长度单位：px用于边框，rem用于除边框之外的所有地方
 * 本文件中map使用"_"开头，config中不使用"_"
 * variables ⇌ config
 */
/**
 * 合并variables和config中的同类map
 * 用以解决业务方升级Yo时需比config和variables的一致性
 * 当config为空时，使用variables中的map作为默认值
 * 当config不为空时，使用config中的定义
 */
/**
 * Yo框架自定义全局函数
 * 扩充Sass默认函数库，用以增强语法
 */
/**
 * @module List扩展函数
 * @description 返回SassList中的第一项
 * @function first
 * @version 2.1.0
 * @param {String} $list 指定一个Sass List <2.1.0>
 */
/**
 * @module List扩展函数
 * @description 返回SassList中的最后一项
 * @function last
 * @version 2.1.0
 * @param {String} $list 指定一个Sass List <2.1.0>
 */
/**
 * @module List扩展函数
 * @description 返回SassList中的倒数第几项
 * @function nth-last
 * @version 2.1.0
 * @param {String} $list 指定一个Sass List <2.1.0>
 * @param {Integer} $index 指定需要返回的值在list中的倒数位置 <2.1.0>
 */
/**
 * @module List扩展函数
 * @description 移除SassList中的某个项目并返回新的List
 * @function remove
 * @version 2.1.0
 * @param {String} $list 指定一个Sass List <2.1.0>
 * @param {String} $value 指定需要被删除的值 <2.1.0>
 */
/**
 * @module List扩展函数
 * @description 截取SassList中的某个部分并返回新的List
 * @function slice
 * @version 2.1.0
 * @param {String} $list 指定一个Sass List <2.1.0>
 * @param {Integer} $start 指定需要截取的开始下标 <2.1.0>
 * @param {Integer} $end 指定需要截取的结束下标（不包括end），当该值缺省时默认为末尾下标 <2.1.0>
 */
/**
 * @module List扩展函数
 * @description 从SassList中添加/删除项目，然后返回新的List。
 * @function splice
 * @version 2.1.0
 * @param {String} $list 指定一个Sass List <2.1.0>
 * @param {Integer} $index 指定需要移除的开始下标 <2.1.0>
 * @param {Integer} $count 指定需要移除的数量，不可以为负值，0表示不移除 <2.1.0>
 * @param {String} $values 指定需要添加的新值（可以是多个），如果该值缺省，则表示只移除不添加新值 <2.1.0>
 */
/**
 * Yo框架全局基础方法
 * 包括响应式方案，CSS3兼容性方案，厂商前缀方案，iconfont方案，flex布局等全局方法
 */
/**
 * @module 功能
 * @description 给需要的属性加厂家前缀
 * @method _prefix
 * @version 1.0.0
 * @param {String} $property 指定属性 <1.0.0>
 * @param {String} $value 指定属性值 <1.0.0>
 * @skip
 */
/**
 * @module 功能
 * @description 定义字体图标
 * @method _yofont
 * @version 1.0.0
 * @skip
 */
/**
 * @module 功能
 * @description 四则运算(iOS6.0+,Android4.4+)
 * @method calc
 * @version 1.7.0
 * @param {String} $property 指定需要进行计算的CSS属性 <1.7.0>
 * @param {String} $value 与原生CSS语法一致，区别在于需要使用引号包裹表达式 <1.7.0>
 * @example <div class="calc">四则运算</div>
 * .calc { @include calc(width, "100% - 100px"); }
 */
/**
 * @module 功能
 * @description 定义响应式方案
 * @method responsive
 * @version 1.0.0
 * @param {String} $media 指定媒体查询条件，取值为`config`文件map `media-types`中的值 <1.0.0>
 */
/**
 * @module 功能
 * @description 清除浮动方案
 * @method clearfix
 * @version 1.0.0
 * @param {String} $type 指定清除浮动的方式，包括：pseudo-element | bfc，默认值：pseudo-element <1.8.5>
 */
/**
 * @module 功能
 * @description 清除行内级元素间间隙方案
 * @method killspace
 * @version 1.0.0
 * @param {Length} $font-size 指定子元素字号，默认值：.14rem <2.0.0>
 * @example
 * <div class="demo">
 *      <span class="item">1</span>
 *      <span class="item">2</span>
 *      <span class="item">3</span>
 * </div>
 * .demo {@include killspace;}
 */
/**
 * @module 功能
 * @description 元素在包含块中的对齐方式，默认为水平垂直对齐
 * @method align
 * @version 2.0.0
 * @param {String} $flexbox 指定包含块布局方式，可选值：flex | inline-flex，默认值：flex <2.0.0>
 * @param {String} $type 指定居中元素类型，可选值：image | text | other，默认值：text <2.0.0>
 * @param {Keywords} $justify-content 指定元素水平对齐方式，取值与`justify-content`属性一致，默认值：center <2.0.0>
 * @param {Keywords} $align-items 指定元素垂直对齐方式，取值与`align-items`属性一致，默认值：center <2.0.0>
 * @example
 * <div class="demo">
 *      <img class="item" alt="未知尺寸图片居中" />
 * </div>
 * .demo {@include align;}
 */
/**
 * @module 功能
 * @description 定义文档根节点是否允许滚动
 * @method root-scroll
 * @version 1.4.0
 * @param {Boolean} $is-scroll 指定是否有滚动，默认值：false <1.8.6>
 */
/**
 * @module 功能
 * @description 定义是否有滚动条
 * @method overflow
 * @version 1.0.0
 * @param {String} $overflow 取值与最新原生语法一致，默认值：auto <1.0.0>
 */
/**
 * @module 功能
 * @description 生成全屏方法
 * @method fullscreen
 * @version 1.7.0
 * @param {Integer} $z-index 指定层叠级别 <1.7.0>
 * @param {Keywords} $position 指定定位方式，取除`static | relative`之外的值，默认值：absolute <1.8.5>
 */
/**
 * @module 用户界面
 * @description 定义使用何种滤镜
 * @method filter
 * @version 1.7.0
 * @param {String} $filter 取值与`filter`属性一致 <1.7.0>
 */
/**
 * @module 用户界面
 * @description 定义UA默认外观
 * @method appearance
 * @version 1.0.0
 * @param {String} $appearance 取值与`appearance`属性一致，默认值：none <1.0.0>
 */
/**
 * @module 用户界面
 * @description 定义如何选中内容
 * @method user-select
 * @version 1.0.0
 * @param {String} $user-select 取值与`user-select`属性一致，默认值：none <1.0.0>
 */
/**
 * @module 用户界面
 * @description 定义盒模型
 * @method box-sizing
 * @version 1.0.0
 * @param {String} $box-sizing 指定盒模型类型，取值与`box-sizing`属性一致，默认值：border-box <1.0.0>
 */
/**
 * @module 背景与边框
 * @description 定义渐变色值
 * @method gradient
 * @version 1.0.0
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial <1.0.0>
 * @param {String} $dir 指定渐变方向，可选值：[left | right] || [top | bottom] | angle <2.0.0>
 * @param {String} $gradient 指定渐变取值，与w3c最新原生语法一致 <1.0.0>
 */
/**
 * @module 背景与边框
 * @description 定义背景图像缩放（AndroidBrowser2.3.*还需要厂商前缀）
 * @method background-size
 * @version 1.4.0
 * @param {Keywords | Length} $background-size 指定背景图缩放值，取值与`background-size`属性一致 <1.4.0>
 */
/**
 * @module 背景与边框
 * @description 定义背景裁减（AndroidBrowser2.3.*还需要厂商前缀）
 * @method background-clip
 * @version 1.6.0
 * @param {Keywords} $background-clip 指定背景图缩放值，取值与`background-clip`属性一致 <1.6.0>
 */
/**
 * @module 背景与边框
 * @description 定义背景显示区域（AndroidBrowser2.3.*还需要厂商前缀）
 * @method background-origin
 * @version 1.6.0
 * @param {Keywords} $background-origin 指定背景图`background-position`属性计算相对的参考点，取值与`background-origin`属性一致 <1.6.0>
 */
/**
 * @module 背景与边框
 * @description 定义圆角，用于修复某些安卓机型上“圆角+边框+背景”，背景溢出的情况
 * @method border-radius
 * @version 1.6.0
 * @param {Length} $border-radius 指定元素的圆角半径，取值与`border-radius`属性一致 <1.6.0>
 */
/**
 * @module 背景与边框
 * @description 为元素添加边框（包括1px边框）
 * @method border
 * @version 2.0.0
 * @param {String} $border-width 指定边框厚度（单位为px），默认值：1px，取值与`border-width`属性一致，不同方向代表边框位置 <2.0.0>
 * @param {String} $border-color 指定边框颜色 <2.0.0>
 * @param {String} $border-style 指定边框样式 <2.0.0>
 * @param {String} $radius 指定边框圆角半径，默认值：null <2.0.0>
 */
/**
 * @module Transform
 * @description 定义简单变换
 * @method transform
 * @version 1.0.0
 * @param {String} $transform 取值范围与`transform`属性一致 <1.0.0>
 */
/**
 * @module Transform
 * @description 定义变换原点
 * @method transform-origin
 * @version 1.0.0
 * @param {Length | Percentage | Keywords} $transform-origin 取值范围与`transform-origin`属性一致 <1.0.0>
 */
/**
 * @module Transform
 * @description 指定某元素的子元素是（看起来）位于三维空间内，还是在该元素所在的平面内被扁平化
 * @method transform-style
 * @version 2.0.0
 * @param {String} $transform-style 取值范围与`transform-style`属性一致 <2.0.0>
 */
/**
 * @module Transform
 * @description 指定观察者与「z=0」平面的距离，使具有三维位置变换的元素产生透视效果。「z>0」的三维元素比正常大，而「z<0」时则比正常小，大小程度由该属性的值决定。
 * @method perspective
 * @version 2.0.0
 * @param {none | Length} $perspective 取值范围与`perspective`属性一致 <2.0.0>
 */
/**
 * @module Transform
 * @description 指定透视点的位置
 * @method perspective-origin
 * @version 2.0.0
 * @param {Length | Percentage | Keywords} $perspective-origin 取值范围与`perspective-origin`属性一致 <2.0.0>
 */
/**
 * @module Transform
 * @description 指定元素背面面向用户时是否可见
 * @method backface-visibility
 * @version 2.0.0
 * @param {Keywords} $backface-visibility 取值范围与`backface-visibility`属性一致 <2.0.0>
 */
/**
 * @module Animation
 * @description 定义动画
 * @method animation
 * @version 1.0.0
 * @param {String} $animation 取值与原生语法一致 <1.0.0>
 */
/**
 * @module Animation
 * @description 指定需要引用的动画名称
 * @method animation-name
 * @version 3.0.0
 * @param {String} $animation-name 取值与原生语法一致 <3.0.0>
 */
/**
 * @module Animation
 * @description 指定动画运行一次所持续的时长
 * @method animation-duration
 * @version 3.0.0
 * @param {String} $animation-duration 取值与原生语法一致 <3.0.0>
 */
/**
 * @module Animation
 * @description 指定动画运行方式
 * @method animation-timing-function
 * @version 3.0.0
 * @param {String} $animation-timing-function 取值与原生语法一致 <3.0.0>
 */
/**
 * @module Animation
 * @description 指定动画延迟多久之后再开始
 * @method animation-delay
 * @version 3.0.0
 * @param {String} $animation-delay 取值与原生语法一致 <3.0.0>
 */
/**
 * @module Animation
 * @description 指定动画循环几次
 * @method animation-iteration-count
 * @version 3.0.0
 * @param {String} $animation-iteration-count 取值与原生语法一致 <3.0.0>
 */
/**
 * @module Animation
 * @description 指定动画的运动方向
 * @method animation-direction
 * @version 3.0.0
 * @param {String} $animation-direction 取值与原生语法一致 <3.0.0>
 */
/**
 * @module Animation
 * @description 指定动画的运动状态
 * @method animation-play-state
 * @version 3.0.0
 * @param {String} $animation-play-state 取值与原生语法一致 <3.0.0>
 */
/**
 * @module Animation
 * @description 指定动画时间之外的状态
 * @method animation-fill-mode
 * @version 3.0.0
 * @param {String} $animation-fill-mode 取值与原生语法一致 <3.0.0>
 */
/**
 * @module Transition
 * @description 定义补间
 * @method transition
 * @version 1.0.0
 * @param {String} $transition 取值与原生语法一致 <1.0.0>
 */
/**
 * @module Flexbox
 * @description 定义显示类型为伸缩盒
 * @method flexbox
 * @version 1.0.0
 * @param {String} $flexbox 默认值：flex，可选值：flex | inline-flex <1.0.0>
 */
/**
 * @module Flexbox
 * @description 定义伸缩盒子元素如何分配空间
 * @method flex
 * @version 1.0.0
 * @param {Number} $flex 取值与`flex`属性一致，默认值：1 <1.0.0>
 * @param {String} $direction 默认值: row，可选值：row | column <1.5.0>
 */
/**
 * @module Flexbox
 * @description 定义伸缩盒子元素的排版顺序
 * @method order
 * @version 1.0.0
 * @param {Integer} $order 取值与`order`属性一致，默认值：1 <1.0.0>
 */
/**
 * @module Flexbox
 * @description 定义弹性盒子元素流动方向及遇见边界时是否换行(iOS7.0+,Android4.4+)
 * @method flex-flow
 * @version 2.0.0
 * @param {String} $flex-flow 取值与`flex-flow`属性一致，默认值：row nowrap <2.0.0>
 */
/**
 * @module Flexbox
 * @description 定义伸缩盒子元素的流动方向
 * @method flex-direction
 * @version 1.0.0
 * @param {String} $flex-direction 取值与`flex-direction`属性一致，默认值：row <1.0.0>
 */
/**
 * @module Flexbox
 * @description 定义弹性盒子元素溢出后排版(iOS7.0+,Android4.4+)
 * @method flex-wrap
 * @version 1.0.0
 * @param {String} $flex-wrap 取值与`flex-wrap`属性一致，默认值：nowrap <1.0.0>
 */
/**
 * @module Flexbox
 * @description 定义弹性容器主轴对齐方式(其中`space-around`值需要iOS7.0+,Android4.4+)
 * @method justify-content
 * @version 1.0.0
 * @param {String} $justify-content 取值与`justify-content`属性一致，默认值：center <1.0.0>
 */
/**
 * @module Flexbox
 * @description 定义多行弹性容器侧轴对齐方式(iOS7.0+,Android4.4+)
 * @method align-content
 * @version 1.8.5
 * @param {String} $align-content 取值与`align-content`属性一致，默认值：center <1.8.5>
 */
/**
 * @module Flexbox
 * @description 定义单行弹性容器侧轴对齐方式
 * @method align-items
 * @version 1.0.0
 * @param {String} $align-items 取值与`align-items`属性一致，默认值：center <1.0.0>
 */
/**
 * @module Flexbox
 * @description 定义弹性容器中子元素自身的在侧轴对齐方式(iOS7.0+,Android4.4+)
 * @method align-self
 * @version 1.0.0
 * @param {String} $align-self 取值与`align-self`属性一致，默认值：center <1.0.0>
 */
/**
 * @module 形状
 * @description 生成矩形方法
 * @method rect
 * @version 1.0.0
 * @param {Length} $width 定义矩形的长度 <1.0.0>
 * @param {Length} $height 定义矩形的高度 <1.0.0>
 */
/**
 * @module 形状
 * @description 生成正方形方法
 * @method square
 * @version 1.0.0
 * @param {Length} $size 定义正方形的边长 <1.0.0>
 */
/**
 * @module 形状
 * @description 生成圆形方法
 * @method circle
 * @version 1.0.0
 * @param {Length} $size 定义圆的半径长度 <1.0.0>
 * @param {Length} $radius 定义圆的圆角半径长度 <1.0.0>
 */
/**
 * @module 文本
 * @description 链接处理方法
 * @method link
 * @version 1.0.0
 * @param {Color} $color 定义链接颜色 <1.0.0>
 */
/**
 * @module 文本
 * @description 文本碰到边界是否换行
 * @method wrap
 * @version 1.0.0
 * @param {Boolean} $is-wrap 定义文本是否换行，默认值：true <2.0.0>
 */
/**
 * @module 文本
 * @description 单行文本溢出时显示省略号
 * @method ellipsis
 * @version 1.0.0
 * @param {Length} $width 定义容器的宽度，默认值：null <2.0.0>
 * @param {Integer} $line-clamp 定义需要显示的行数，默认值：1（即使用单行溢出的处理方案），需要注意的是本参数只支持webkit内核 <2.1.2>
 */
/**
 * @module 文本
 * @description 文字隐藏方案
 * @method texthide
 * @version 1.0.0
 * @param {Length} $width 定义容器的宽度，默认值：null <2.0.0>
 */
/**
 * Yo框架全局Reset
 * Yo重置Mobile及高级浏览器上常见的差异
 */
*,
::before,
::after {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-tap-highlight-color: transparent;
}

html,
body {
  overflow: hidden;
  height: 100%;
}

::-webkit-scrollbar {
  display: none;
}

html {
  background-color: #eee;
  color: #212121;
  font-size: 100px;
  -webkit-user-select: none;
  user-select: none;
}

body {
  margin: 0;
  font-size: 0.14em;
  line-height: 1.5;
  font-family: Helvetica Neue, Helvetica, STHeiTi, sans-serif;
}

ul,
ol,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
figure,
form,
fieldset,
legend,
input,
textarea,
button,
p,
blockquote,
th,
td,
pre,
xmp {
  margin: 0;
  padding: 0;
}

input,
textarea,
button,
select,
pre,
xmp,
tt,
code,
kbd,
samp {
  line-height: inherit;
  font-family: inherit;
}

h1,
h2,
h3,
h4,
h5,
h6,
small,
big,
input,
textarea,
button,
select {
  font-size: inherit;
}

address,
cite,
dfn,
em,
i,
optgroup,
var {
  font-style: normal;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
  table-layout: fixed;
  text-align: left;
}

ul,
ol,
menu {
  list-style: none;
}

fieldset,
img {
  border: 0;
  vertical-align: middle;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  display: block;
}

audio,
canvas,
video {
  display: inline-block;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: "\0020";
}

textarea,
pre,
xmp {
  overflow: auto;
  -webkit-overflow-scrolling: touch;
}

textarea {
  resize: vertical;
}

input,
textarea,
button,
select
a {
  outline: 0 none;
}

input,
textarea,
button,
select {
  color: inherit;
}

input:disabled,
textarea:disabled,
button:disabled,
select:disabled {
  opacity: 1;
}

button::-moz-focus-inner,
input::-moz-focus-inner {
  padding: 0;
  border: 0;
}

input[type="button"],
input[type="submit"],
input[type="reset"],
input[type="file"]::-webkit-file-upload-button,
input[type="search"]::-webkit-search-cancel-button {
  -webkit-appearance: none;
  appearance: none;
}

mark {
  background-color: transparent;
}

a,
ins,
s,
u,
del {
  text-decoration: none;
}

a,
img {
  -webkit-touch-callout: none;
}

a {
  color: #00afc7;
}

.g-clear::after,
.g-mod::after {
  display: block;
  overflow: hidden;
  clear: both;
  height: 0;
  content: "\0020";
}

@font-face {
  font-family: yofont;
  src: url(//ss.qunarzz.com/yo/font/1.0.3/yofont.woff) format("woff"), url(//ss.qunarzz.com/yo/font/1.0.3/yofont.ttf) format("truetype");
}

.yo-ico {
  font-family: yofont !important;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  vertical-align: middle;
}

/**
 * Yo框架动画解决方案
 * Yo内置了超过60种动画形态，不同的动画可以任意组合
 */
.ani {
  -webkit-animation-duration: 1s;
  animation-duration: 1s;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
}

.ani.infinite {
  -webkit-animation-iteration-count: infinite;
  animation-iteration-count: infinite;
}

/**
 * @module fade
 * @description 定义淡入动画
 * @method fade-in
 */
@-webkit-keyframes fade-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@keyframes fade-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.ani.fade-in {
  -webkit-animation-name: fade-in;
  animation-name: fade-in;
}

/**
 * @module fade
 * @description 定义淡入升起动画
 * @method fade-in-up
 */
@-webkit-keyframes fade-in-up {
  0% {
    opacity: 0;
    -webkit-transform: translate3d(0, 100%, 0);
  }
  100% {
    opacity: 1;
    -webkit-transform: translate3d(0, 0, 0);
  }
}

@keyframes fade-in-up {
  0% {
    opacity: 0;
    transform: translate3d(0, 100%, 0);
  }
  100% {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

.ani.fade-in-up {
  -webkit-animation-name: fade-in-up;
  animation-name: fade-in-up;
}

/**
 * @module fade
 * @description 定义从右侧淡入动画
 * @method fade-in-right
 */
@-webkit-keyframes fade-in-right {
  0% {
    opacity: 0;
    -webkit-transform: translate3d(100%, 0, 0);
  }
  100% {
    opacity: 1;
    -webkit-transform: translate3d(0, 0, 0);
  }
}

@keyframes fade-in-right {
  0% {
    opacity: 0;
    transform: translate3d(100%, 0, 0);
  }
  100% {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

.ani.fade-in-right {
  -webkit-animation-name: fade-in-right;
  animation-name: fade-in-right;
}

/**
 * @module fade
 * @description 定义淡入落下动画
 * @method fade-in-down
 */
@-webkit-keyframes fade-in-down {
  0% {
    opacity: 0;
    -webkit-transform: translate3d(0, -100%, 0);
  }
  100% {
    opacity: 1;
    -webkit-transform: translate3d(0, 0, 0);
  }
}

@keyframes fade-in-down {
  0% {
    opacity: 0;
    transform: translate3d(0, -100%, 0);
  }
  100% {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

.ani.fade-in-down {
  -webkit-animation-name: fade-in-down;
  animation-name: fade-in-down;
}

/**
 * @module fade
 * @description 定义从左侧淡入动画
 * @method fade-in-left
 */
@-webkit-keyframes fade-in-left {
  0% {
    opacity: 0;
    -webkit-transform: translate3d(-100%, 0, 0);
  }
  100% {
    opacity: 1;
    -webkit-transform: translate3d(0, 0, 0);
  }
}

@keyframes fade-in-left {
  0% {
    opacity: 0;
    transform: translate3d(-100%, 0, 0);
  }
  100% {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

.ani.fade-in-left {
  -webkit-animation-name: fade-in-left;
  animation-name: fade-in-left;
}

/**
 * @module fade
 * @description 定义淡出动画
 * @method fade-out
 */
@-webkit-keyframes fade-out {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

@keyframes fade-out {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

.ani.fade-out {
  -webkit-animation-name: fade-out;
  animation-name: fade-out;
}

/**
 * @module fade
 * @description 定义从上面淡出动画
 * @method fade-out-up
 */
@-webkit-keyframes fade-out-up {
  0% {
    opacity: 1;
    -webkit-transform: translate3d(0, 0, 0);
  }
  100% {
    opacity: 0;
    -webkit-transform: translate3d(0, -100%, 0);
  }
}

@keyframes fade-out-up {
  0% {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
  100% {
    opacity: 0;
    transform: translate3d(0, -100%, 0);
  }
}

.ani.fade-out-up {
  -webkit-animation-name: fade-out-up;
  animation-name: fade-out-up;
}

/**
 * @module fade
 * @description 定义从右侧淡出动画
 * @method fade-out-right
 */
@-webkit-keyframes fade-out-right {
  0% {
    opacity: 1;
    -webkit-transform: translate3d(0, 0, 0);
  }
  100% {
    opacity: 0;
    -webkit-transform: translate3d(100%, 0, 0);
  }
}

@keyframes fade-out-right {
  0% {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
  100% {
    opacity: 0;
    transform: translate3d(100%, 0, 0);
  }
}

.ani.fade-out-right {
  -webkit-animation-name: fade-out-right;
  animation-name: fade-out-right;
}

/**
 * @module fade
 * @description 定义从下面淡出动画
 * @method fade-out-down
 */
@-webkit-keyframes fade-out-down {
  0% {
    opacity: 1;
    -webkit-transform: translate3d(0, 0, 0);
  }
  100% {
    opacity: 0;
    -webkit-transform: translate3d(0, 100%, 0);
  }
}

@keyframes fade-out-down {
  0% {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
  100% {
    opacity: 0;
    transform: translate3d(0, 100%, 0);
  }
}

.ani.fade-out-down {
  -webkit-animation-name: fade-out-down;
  animation-name: fade-out-down;
}

/**
 * @module fade
 * @description 定义从左侧淡出动画
 * @method fade-out-left
 */
@-webkit-keyframes fade-out-left {
  0% {
    opacity: 1;
    -webkit-transform: translate3d(0, 0, 0);
  }
  100% {
    opacity: 0;
    -webkit-transform: translate3d(-100%, 0, 0);
  }
}

@keyframes fade-out-left {
  0% {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
  100% {
    opacity: 0;
    transform: translate3d(-100%, 0, 0);
  }
}

.ani.fade-out-left {
  -webkit-animation-name: fade-out-left;
  animation-name: fade-out-left;
}

/**
 * @module elastic
 * @description 定义X轴弹性动画
 * @method elastic-x
 */
@-webkit-keyframes elastic-x {
  0%,
  20%,
  100% {
    -webkit-transform: translate3d(0, 0, 0);
  }
  30% {
    -webkit-transform: translate3d(20px, 0, 0);
  }
  50% {
    -webkit-transform: translate3d(-20px, 0, 0);
  }
  65% {
    -webkit-transform: translate3d(10px, 0, 0);
  }
  80% {
    -webkit-transform: translate3d(-10px, 0, 0);
  }
  90% {
    -webkit-transform: translate3d(5px, 0, 0);
  }
}

@keyframes elastic-x {
  0%,
  20%,
  100% {
    transform: translate3d(0, 0, 0);
  }
  30% {
    transform: translate3d(20px, 0, 0);
  }
  50% {
    transform: translate3d(-20px, 0, 0);
  }
  65% {
    transform: translate3d(10px, 0, 0);
  }
  80% {
    transform: translate3d(-10px, 0, 0);
  }
  90% {
    transform: translate3d(5px, 0, 0);
  }
}

.ani.elastic-x {
  -webkit-animation-name: elastic-x;
  animation-name: elastic-x;
}

/**
 * @module elastic
 * @description 定义Y轴弹性动画
 * @method elastic-y
 */
@-webkit-keyframes elastic-y {
  0%,
  20%,
  100% {
    -webkit-transform: translate3d(0, 0, 0);
  }
  30% {
    -webkit-transform: translate3d(0, 20px, 0);
  }
  50% {
    -webkit-transform: translate3d(0, -20px, 0);
  }
  65% {
    -webkit-transform: translate3d(0, 10px, 0);
  }
  80% {
    -webkit-transform: translate3d(0, -10px, 0);
  }
  90% {
    -webkit-transform: translate3d(0, 5px, 0);
  }
}

@keyframes elastic-y {
  0%,
  20%,
  100% {
    transform: translate3d(0, 0, 0);
  }
  30% {
    transform: translate3d(0, 20px, 0);
  }
  50% {
    transform: translate3d(0, -20px, 0);
  }
  65% {
    transform: translate3d(0, 10px, 0);
  }
  80% {
    transform: translate3d(0, -10px, 0);
  }
  90% {
    transform: translate3d(0, 5px, 0);
  }
}

.ani.elastic-y {
  -webkit-animation-name: elastic-y;
  animation-name: elastic-y;
}

/**
 * @module elastic
 * @description 定义弹性进入动画
 * @method elastic-in
 */
@-webkit-keyframes elastic-in {
  0% {
    opacity: 0;
    -webkit-transform: scale3d(0.3, 0.3, 0.3);
  }
  20% {
    -webkit-transform: scale3d(1.1, 1.1, 1.1);
  }
  40% {
    -webkit-transform: scale3d(0.9, 0.9, 0.9);
  }
  60% {
    opacity: 1;
    -webkit-transform: scale3d(1.03, 1.03, 1.03);
  }
  80% {
    -webkit-transform: scale3d(0.97, 0.97, 0.97);
  }
  100% {
    opacity: 1;
    -webkit-transform: scale3d(1, 1, 1);
  }
}

@keyframes elastic-in {
  0% {
    opacity: 0;
    transform: scale3d(0.3, 0.3, 0.3);
  }
  20% {
    transform: scale3d(1.1, 1.1, 1.1);
  }
  40% {
    transform: scale3d(0.9, 0.9, 0.9);
  }
  60% {
    opacity: 1;
    transform: scale3d(1.03, 1.03, 1.03);
  }
  80% {
    transform: scale3d(0.97, 0.97, 0.97);
  }
  100% {
    opacity: 1;
    transform: scale3d(1, 1, 1);
  }
}

.ani.elastic-in {
  -webkit-animation-name: elastic-in;
  animation-name: elastic-in;
}

/**
 * @module elastic
 * @description 定义弹性升起动画
 * @method elastic-in-up
 */
@-webkit-keyframes elastic-in-up {
  0% {
    opacity: 0;
    -webkit-transform: translate3d(0, 3000px, 0);
  }
  60% {
    opacity: 1;
    -webkit-transform: translate3d(0, -25px, 0);
  }
  75% {
    -webkit-transform: translate3d(0, 10px, 0);
  }
  90% {
    -webkit-transform: translate3d(0, -5px, 0);
  }
  100% {
    -webkit-transform: translate3d(0, 0, 0);
  }
}

@keyframes elastic-in-up {
  0% {
    opacity: 0;
    transform: translate3d(0, 3000px, 0);
  }
  60% {
    opacity: 1;
    transform: translate3d(0, -25px, 0);
  }
  75% {
    transform: translate3d(0, 10px, 0);
  }
  90% {
    transform: translate3d(0, -5px, 0);
  }
  100% {
    transform: translate3d(0, 0, 0);
  }
}

.ani.elastic-in-up {
  -webkit-animation-name: elastic-in-up;
  animation-name: elastic-in-up;
}

/**
 * @module elastic
 * @description 定义从右侧弹性进入动画
 * @method elastic-in-right
 */
@-webkit-keyframes elastic-in-right {
  0% {
    opacity: 0;
    -webkit-transform: translate3d(3000px, 0, 0);
  }
  60% {
    opacity: 1;
    -webkit-transform: translate3d(-25px, 0, 0);
  }
  75% {
    -webkit-transform: translate3d(10px, 0, 0);
  }
  90% {
    -webkit-transform: translate3d(-5px, 0, 0);
  }
  100% {
    -webkit-transform: translate3d(0, 0, 0);
  }
}

@keyframes elastic-in-right {
  0% {
    opacity: 0;
    transform: translate3d(3000px, 0, 0);
  }
  60% {
    opacity: 1;
    transform: translate3d(-25px, 0, 0);
  }
  75% {
    transform: translate3d(10px, 0, 0);
  }
  90% {
    transform: translate3d(-5px, 0, 0);
  }
  100% {
    transform: translate3d(0, 0, 0);
  }
}

.ani.elastic-in-right {
  -webkit-animation-name: elastic-in-right;
  animation-name: elastic-in-right;
}

/**
 * @module elastic
 * @description 定义弹性下落动画
 * @method elastic-in-down
 * @demo http://ued.qunar.com/mobile/yo/demo/animate/ani-text.html
 * @example <div class="ani elastic-in-down">该元素将会被应用elastic-in-down动画</div>
 */
@-webkit-keyframes elastic-in-down {
  0% {
    opacity: 0;
    -webkit-transform: translate3d(0, -3000px, 0);
  }
  60% {
    opacity: 1;
    -webkit-transform: translate3d(0, 25px, 0);
  }
  75% {
    -webkit-transform: translate3d(0, -10px, 0);
  }
  90% {
    -webkit-transform: translate3d(0, 5px, 0);
  }
  100% {
    -webkit-transform: translate3d(0, 0, 0);
  }
}

@keyframes elastic-in-down {
  0% {
    opacity: 0;
    transform: translate3d(0, -3000px, 0);
  }
  60% {
    opacity: 1;
    transform: translate3d(0, 25px, 0);
  }
  75% {
    transform: translate3d(0, -10px, 0);
  }
  90% {
    transform: translate3d(0, 5px, 0);
  }
  100% {
    transform: translate3d(0, 0, 0);
  }
}

.ani.elastic-in-down {
  -webkit-animation-name: elastic-in-down;
  animation-name: elastic-in-down;
}

/**
 * @module elastic
 * @description 定义从左侧弹性进入动画
 * @method elastic-in-left
 */
@-webkit-keyframes elastic-in-left {
  0% {
    opacity: 0;
    -webkit-transform: translate3d(-3000px, 0, 0);
  }
  60% {
    opacity: 1;
    -webkit-transform: translate3d(25px, 0, 0);
  }
  75% {
    -webkit-transform: translate3d(-10px, 0, 0);
  }
  90% {
    -webkit-transform: translate3d(5px, 0, 0);
  }
  100% {
    -webkit-transform: translate3d(0, 0, 0);
  }
}

@keyframes elastic-in-left {
  0% {
    opacity: 0;
    transform: translate3d(-3000px, 0, 0);
  }
  60% {
    opacity: 1;
    transform: translate3d(25px, 0, 0);
  }
  75% {
    transform: translate3d(-10px, 0, 0);
  }
  90% {
    transform: translate3d(5px, 0, 0);
  }
  100% {
    transform: translate3d(0, 0, 0);
  }
}

.ani.elastic-in-left {
  -webkit-animation-name: elastic-in-left;
  animation-name: elastic-in-left;
}

/**
 * @module elastic
 * @description 定义弹性移出动画
 * @method elastic-out
 */
@-webkit-keyframes elastic-out {
  20% {
    -webkit-transform: scale3d(0.9, 0.9, 0.9);
  }
  50%,
  55% {
    opacity: 1;
    -webkit-transform: scale3d(1.1, 1.1, 1.1);
  }
  100% {
    opacity: 0;
    -webkit-transform: scale3d(0.3, 0.3, 0.3);
  }
}

@keyframes elastic-out {
  20% {
    transform: scale3d(0.9, 0.9, 0.9);
  }
  50%,
  55% {
    opacity: 1;
    transform: scale3d(1.1, 1.1, 1.1);
  }
  100% {
    opacity: 0;
    transform: scale3d(0.3, 0.3, 0.3);
  }
}

.ani.elastic-out {
  -webkit-animation-name: elastic-out;
  animation-name: elastic-out;
}

/**
 * @module elastic
 * @description 定义弹性向上移出动画
 * @method elastic-out-up
 */
@-webkit-keyframes elastic-out-up {
  20% {
    -webkit-transform: translate3d(0, -10px, 0);
  }
  40%,
  45% {
    opacity: 1;
    -webkit-transform: translate3d(0, 20px, 0);
  }
  100% {
    opacity: 0;
    -webkit-transform: translate3d(0, -2000px, 0);
  }
}

@keyframes elastic-out-up {
  20% {
    transform: translate3d(0, -10px, 0);
  }
  40%,
  45% {
    opacity: 1;
    transform: translate3d(0, 20px, 0);
  }
  100% {
    opacity: 0;
    transform: translate3d(0, -2000px, 0);
  }
}

.ani.elastic-out-up {
  -webkit-animation-name: elastic-out-up;
  animation-name: elastic-out-up;
}

/**
 * @module elastic
 * @description 定义弹性向右移出动画
 * @method elastic-out-right
 */
@-webkit-keyframes elastic-out-right {
  20% {
    -webkit-transform: translate3d(10px, 0, 0);
  }
  40%,
  45% {
    opacity: 1;
    -webkit-transform: translate3d(-20px, 0, 0);
  }
  100% {
    opacity: 0;
    -webkit-transform: translate3d(2000px, 0, 0);
  }
}

@keyframes elastic-out-right {
  20% {
    transform: translate3d(10px, 0, 0);
  }
  40%,
  45% {
    opacity: 1;
    transform: translate3d(-20px, 0, 0);
  }
  100% {
    opacity: 0;
    transform: translate3d(2000px, 0, 0);
  }
}

.ani.elastic-out-right {
  -webkit-animation-name: elastic-out-right;
  animation-name: elastic-out-right;
}

/**
 * @module elastic
 * @description 定义弹性向下移出动画
 * @method elastic-out-down
 */
@-webkit-keyframes elastic-out-down {
  20% {
    -webkit-transform: translate3d(0, 10px, 0);
  }
  40%,
  45% {
    opacity: 1;
    -webkit-transform: translate3d(0, -20px, 0);
  }
  100% {
    opacity: 0;
    -webkit-transform: translate3d(0, 2000px, 0);
  }
}

@keyframes elastic-out-down {
  20% {
    transform: translate3d(0, 10px, 0);
  }
  40%,
  45% {
    opacity: 1;
    transform: translate3d(0, -20px, 0);
  }
  100% {
    opacity: 0;
    transform: translate3d(0, 2000px, 0);
  }
}

.ani.elastic-out-down {
  -webkit-animation-name: elastic-out-down;
  animation-name: elastic-out-down;
}

/**
 * @module elastic
 * @description 定义弹性向左移出动画
 * @method elastic-out-left
 */
@-webkit-keyframes elastic-out-left {
  20% {
    -webkit-transform: translate3d(-10px, 0, 0);
  }
  40%,
  45% {
    opacity: 1;
    -webkit-transform: translate3d(20px, 0, 0);
  }
  100% {
    opacity: 0;
    -webkit-transform: translate3d(-2000px, 0, 0);
  }
}

@keyframes elastic-out-left {
  20% {
    transform: translate3d(-10px, 0, 0);
  }
  40%,
  45% {
    opacity: 1;
    transform: translate3d(20px, 0, 0);
  }
  100% {
    opacity: 0;
    transform: translate3d(-2000px, 0, 0);
  }
}

.ani.elastic-out-left {
  -webkit-animation-name: elastic-out-left;
  animation-name: elastic-out-left;
}

/**
 * @module flip
 * @description 定义翻转动画
 * @method flip
 */
@-webkit-keyframes flip {
  0% {
    -webkit-transform: perspective(400px) rotate3d(0, 1, 0, -360deg);
  }
  40% {
    -webkit-transform: perspective(400px) translate3d(0, 0, 150px) rotate3d(0, 1, 0, -190deg);
  }
  50% {
    -webkit-transform: perspective(400px) translate3d(0, 0, 150px) rotate3d(0, 1, 0, -170deg);
  }
  80% {
    -webkit-transform: perspective(400px) scale3d(0.9, 0.9, 0.9);
  }
  100% {
    -webkit-transform: perspective(400px);
  }
}

@keyframes flip {
  0% {
    transform: perspective(400px) rotate3d(0, 1, 0, -360deg);
  }
  40% {
    transform: perspective(400px) translate3d(0, 0, 150px) rotate3d(0, 1, 0, -190deg);
  }
  50% {
    transform: perspective(400px) translate3d(0, 0, 150px) rotate3d(0, 1, 0, -170deg);
  }
  80% {
    transform: perspective(400px) scale3d(0.9, 0.9, 0.9);
  }
  100% {
    transform: perspective(400px);
  }
}

.ani.flip {
  -webkit-backface-visibility: visible;
  backface-visibility: visible;
  -webkit-animation-name: flip;
  animation-name: flip;
}

/**
 * @module flip
 * @description 定义翻转动画
 * @method flip-in-x
 */
@-webkit-keyframes flip-in-x {
  0% {
    -webkit-transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
    -webkit-transition-timing-function: ease-in;
    opacity: 0;
  }
  40% {
    -webkit-transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
    -webkit-transition-timing-function: ease-in;
  }
  60% {
    -webkit-transform: perspective(400px) rotate3d(1, 0, 0, 10deg);
    opacity: 1;
  }
  80% {
    -webkit-transform: perspective(400px) rotate3d(1, 0, 0, -5deg);
  }
  100% {
    -webkit-transform: perspective(400px);
  }
}

@keyframes flip-in-x {
  0% {
    transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
    transition-timing-function: ease-in;
    opacity: 0;
  }
  40% {
    transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
    transition-timing-function: ease-in;
  }
  60% {
    transform: perspective(400px) rotate3d(1, 0, 0, 10deg);
    opacity: 1;
  }
  80% {
    transform: perspective(400px) rotate3d(1, 0, 0, -5deg);
  }
  100% {
    transform: perspective(400px);
  }
}

.ani.flip-in-x {
  -webkit-backface-visibility: visible;
  backface-visibility: visible;
  -webkit-animation-name: flip-in-x;
  animation-name: flip-in-x;
}

/**
 * @module flip
 * @description 定义翻转动画
 * @method flip-in-y
 */
@-webkit-keyframes flip-in-y {
  0% {
    -webkit-transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
    -webkit-transition-timing-function: ease-in;
    opacity: 0;
  }
  40% {
    -webkit-transform: perspective(400px) rotate3d(0, 1, 0, -20deg);
    -webkit-transition-timing-function: ease-in;
  }
  60% {
    -webkit-transform: perspective(400px) rotate3d(0, 1, 0, 10deg);
    opacity: 1;
  }
  80% {
    -webkit-transform: perspective(400px) rotate3d(0, 1, 0, -5deg);
  }
  100% {
    -webkit-transform: perspective(400px);
  }
}

@keyframes flip-in-y {
  0% {
    transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
    transition-timing-function: ease-in;
    opacity: 0;
  }
  40% {
    transform: perspective(400px) rotate3d(0, 1, 0, -20deg);
    transition-timing-function: ease-in;
  }
  60% {
    transform: perspective(400px) rotate3d(0, 1, 0, 10deg);
    opacity: 1;
  }
  80% {
    transform: perspective(400px) rotate3d(0, 1, 0, -5deg);
  }
  100% {
    transform: perspective(400px);
  }
}

.ani.flip-in-y {
  -webkit-backface-visibility: visible;
  backface-visibility: visible;
  -webkit-animation-name: flip-in-y;
  animation-name: flip-in-y;
}

/**
 * @module flip
 * @description 定义翻转动画
 * @method flip-out-x
 */
@-webkit-keyframes flip-out-x {
  0% {
    -webkit-transform: perspective(400px);
  }
  30% {
    -webkit-transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
    opacity: 1;
  }
  100% {
    -webkit-transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
    opacity: 0;
  }
}

@keyframes flip-out-x {
  0% {
    transform: perspective(400px);
  }
  30% {
    transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
    opacity: 1;
  }
  100% {
    transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
    opacity: 0;
  }
}

.ani.flip-out-x {
  -webkit-backface-visibility: visible;
  backface-visibility: visible;
  -webkit-animation-name: flip-out-x;
  animation-name: flip-out-x;
}

/**
 * @module flip
 * @description 定义翻转动画
 * @method flip-out-y
 */
@-webkit-keyframes flip-out-y {
  0% {
    -webkit-transform: perspective(400px);
  }
  30% {
    -webkit-transform: perspective(400px) rotate3d(0, 1, 0, -15deg);
    opacity: 1;
  }
  100% {
    -webkit-transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
    opacity: 0;
  }
}

@keyframes flip-out-y {
  0% {
    transform: perspective(400px);
  }
  30% {
    transform: perspective(400px) rotate3d(0, 1, 0, -15deg);
    opacity: 1;
  }
  100% {
    transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
    opacity: 0;
  }
}

.ani.flip-out-y {
  -webkit-backface-visibility: visible;
  backface-visibility: visible;
  -webkit-animation-name: flip-out-y;
  animation-name: flip-out-y;
}

/**
 * @module roll
 * @description 定义从右侧翻滚进入动画
 * @method roll-in-righ
 */
@-webkit-keyframes roll-in-right {
  0% {
    opacity: 0;
    -webkit-transform: translate3d(100%, 0, 0) rotate3d(0, 0, 1, 120deg);
  }
  100% {
    opacity: 1;
    -webkit-transform: none;
  }
}

@keyframes roll-in-right {
  0% {
    opacity: 0;
    transform: translate3d(100%, 0, 0) rotate3d(0, 0, 1, 120deg);
  }
  100% {
    opacity: 1;
    transform: none;
  }
}

.ani.roll-in-right {
  -webkit-animation-name: roll-in-right;
  animation-name: roll-in-right;
}

/**
 * @module roll
 * @description 定义从左侧翻滚进入动画
 * @method roll-in-left
 */
@-webkit-keyframes roll-in-left {
  0% {
    opacity: 0;
    -webkit-transform: translate3d(-100%, 0, 0) rotate3d(0, 0, 1, -120deg);
  }
  100% {
    opacity: 1;
    -webkit-transform: none;
  }
}

@keyframes roll-in-left {
  0% {
    opacity: 0;
    transform: translate3d(-100%, 0, 0) rotate3d(0, 0, 1, -120deg);
  }
  100% {
    opacity: 1;
    transform: none;
  }
}

.ani.roll-in-left {
  -webkit-animation-name: roll-in-left;
  animation-name: roll-in-left;
}

/**
 * @module roll
 * @description 定义从右侧翻滚出去动画
 * @method roll-out-right
 */
@-webkit-keyframes roll-out-right {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
    -webkit-transform: translate3d(100%, 0, 0) rotate3d(0, 0, 1, 120deg);
  }
}

@keyframes roll-out-right {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
    transform: translate3d(100%, 0, 0) rotate3d(0, 0, 1, 120deg);
  }
}

.ani.roll-out-right {
  -webkit-animation-name: roll-out-right;
  animation-name: roll-out-right;
}

/**
 * @module roll
 * @description 定义从左侧翻滚出去动画
 * @method roll-out-left
 */
@-webkit-keyframes roll-out-left {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
    -webkit-transform: translate3d(-100%, 0, 0) rotate3d(0, 0, 1, -120deg);
  }
}

@keyframes roll-out-left {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
    transform: translate3d(-100%, 0, 0) rotate3d(0, 0, 1, -120deg);
  }
}

.ani.roll-out-left {
  -webkit-animation-name: roll-out-left;
  animation-name: roll-out-left;
}

/**
 * @module speed
 * @description 定义从右侧快速进入动画
 * @method speed-in-right
 */
@-webkit-keyframes speed-in-right {
  0% {
    -webkit-transform: translate3d(100%, 0, 0) skewX(-30deg);
    opacity: 0;
  }
  60% {
    -webkit-transform: skewX(20deg);
    opacity: 1;
  }
  80% {
    -webkit-transform: skewX(-5deg);
    opacity: 1;
  }
  100% {
    -webkit-transform: none;
    opacity: 1;
  }
}

@keyframes speed-in-right {
  0% {
    transform: translate3d(100%, 0, 0) skewX(-30deg);
    opacity: 0;
  }
  60% {
    transform: skewX(20deg);
    opacity: 1;
  }
  80% {
    transform: skewX(-5deg);
    opacity: 1;
  }
  100% {
    transform: none;
    opacity: 1;
  }
}

.ani.speed-in-right {
  -webkit-animation-timing-function: ease-out;
  animation-timing-function: ease-out;
  -webkit-animation-name: speed-in-right;
  animation-name: speed-in-right;
}

/**
 * @module speed
 * @description 定义从左侧快速进入动画
 * @method speed-in-left
 */
@-webkit-keyframes speed-in-left {
  0% {
    -webkit-transform: translate3d(-100%, 0, 0) skewX(30deg);
    opacity: 0;
  }
  60% {
    -webkit-transform: skewX(-20deg);
    opacity: 1;
  }
  80% {
    -webkit-transform: skewX(5deg);
    opacity: 1;
  }
  100% {
    -webkit-transform: none;
    opacity: 1;
  }
}

@keyframes speed-in-left {
  0% {
    transform: translate3d(100%, 0, 0) skewX(-30deg);
    opacity: 0;
  }
  60% {
    transform: skewX(20deg);
    opacity: 1;
  }
  80% {
    transform: skewX(-5deg);
    opacity: 1;
  }
  100% {
    transform: none;
    opacity: 1;
  }
}

.ani.speed-in-left {
  -webkit-animation-timing-function: ease-out;
  animation-timing-function: ease-out;
  -webkit-animation-name: speed-in-left;
  animation-name: speed-in-left;
}

/**
 * @module speed
 * @description 定义从右侧快速出去动画
 * @method speed-out-right
 */
@-webkit-keyframes speed-out-right {
  0% {
    opacity: 1;
  }
  100% {
    -webkit-transform: translate3d(100%, 0, 0) skewX(30deg);
    opacity: 0;
  }
}

@keyframes speed-out-right {
  0% {
    opacity: 1;
  }
  100% {
    transform: translate3d(100%, 0, 0) skewX(30deg);
    opacity: 0;
  }
}

.ani.speed-out-right {
  -webkit-animation-timing-function: ease-in;
  animation-timing-function: ease-in;
  -webkit-animation-name: speed-out-right;
  animation-name: speed-out-right;
}

/**
 * @module speed
 * @description 定义从左侧快速出去动画
 * @method speed-out-left
 */
@-webkit-keyframes speed-out-left {
  0% {
    opacity: 1;
  }
  100% {
    -webkit-transform: translate3d(-100%, 0, 0) skewX(-30deg);
    opacity: 0;
  }
}

@keyframes speed-out-left {
  0% {
    opacity: 1;
  }
  100% {
    transform: translate3d(-100%, 0, 0) skewX(-30deg);
    opacity: 0;
  }
}

.ani.speed-out-left {
  -webkit-animation-timing-function: ease-in;
  animation-timing-function: ease-in;
  -webkit-animation-name: speed-out-left;
  animation-name: speed-out-left;
}

/**
 * @module rotate
 * @description 定义旋转动画
 * @method rotate
 */
@-webkit-keyframes rotate {
  from {
    -webkit-transform: rotatez(0);
  }
  to {
    -webkit-transform: rotatez(360deg);
  }
}

@keyframes rotate {
  from {
    transform: rotatez(0);
  }
  to {
    transform: rotatez(360deg);
  }
}

.ani.rotate {
  -webkit-animation-name: rotate;
  animation-name: rotate;
}

/**
 * @module rotate
 * @description 定义旋转进入动画
 * @method rotate-in
 */
@-webkit-keyframes rotate-in {
  0% {
    -webkit-transform-origin: center;
    -webkit-transform: rotate3d(0, 0, 1, -200deg);
    opacity: 0;
  }
  100% {
    -webkit-transform-origin: center;
    -webkit-transform: none;
    opacity: 1;
  }
}

@keyframes rotate-in {
  0% {
    transform-origin: center;
    transform: rotate3d(0, 0, 1, -200deg);
    opacity: 0;
  }
  100% {
    transform-origin: center;
    transform: none;
    opacity: 1;
  }
}

.ani.rotate-in {
  -webkit-animation-name: rotate-in;
  animation-name: rotate-in;
}

/**
 * @module rotate
 * @description 定义旋转从右向上进入动画
 * @method rotate-in-up-right
 */
@-webkit-keyframes rotate-in-up-right {
  0% {
    -webkit-transform-origin: right bottom;
    -webkit-transform: rotate3d(0, 0, 1, -45deg);
    opacity: 0;
  }
  100% {
    -webkit-transform-origin: right bottom;
    -webkit-transform: none;
    opacity: 1;
  }
}

@keyframes rotate-in-up-right {
  0% {
    transform-origin: right bottom;
    transform: rotate3d(0, 0, 1, -45deg);
    opacity: 0;
  }
  100% {
    transform-origin: right bottom;
    transform: none;
    opacity: 1;
  }
}

.ani.rotate-in-up-right {
  -webkit-animation-name: rotate-in-up-right;
  animation-name: rotate-in-up-right;
}

/**
 * @module rotate
 * @description 定义旋转从左向上进入动画
 * @method rotate-in-up-left
 */
@-webkit-keyframes rotate-in-up-left {
  0% {
    -webkit-transform-origin: left bottom;
    -webkit-transform: rotate3d(0, 0, 1, 45deg);
    opacity: 0;
  }
  100% {
    -webkit-transform-origin: left bottom;
    -webkit-transform: none;
    opacity: 1;
  }
}

@keyframes rotate-in-up-left {
  0% {
    transform-origin: left bottom;
    transform: rotate3d(0, 0, 1, 45deg);
    opacity: 0;
  }
  100% {
    transform-origin: left bottom;
    transform: none;
    opacity: 1;
  }
}

.ani.rotate-in-up-left {
  -webkit-animation-name: rotate-in-up-left;
  animation-name: rotate-in-up-left;
}

/**
 * @module rotate
 * @description 定义旋转从右向下进入动画
 * @method rotate-in-down-right
 */
@-webkit-keyframes rotate-in-down-right {
  0% {
    -webkit-transform-origin: right bottom;
    -webkit-transform: rotate3d(0, 0, 1, 45deg);
    opacity: 0;
  }
  100% {
    -webkit-transform-origin: right bottom;
    -webkit-transform: none;
    opacity: 1;
  }
}

@keyframes rotate-in-down-right {
  0% {
    transform-origin: right bottom;
    transform: rotate3d(0, 0, 1, 45deg);
    opacity: 0;
  }
  100% {
    transform-origin: right bottom;
    transform: none;
    opacity: 1;
  }
}

.ani.rotate-in-down-right {
  -webkit-animation-name: rotate-in-down-right;
  animation-name: rotate-in-down-right;
}

/**
 * @module rotate
 * @description 定义旋转从左向下进入动画
 * @method rotate-in-down-left
 */
@-webkit-keyframes rotate-in-down-left {
  0% {
    -webkit-transform-origin: left bottom;
    -webkit-transform: rotate3d(0, 0, 1, -45deg);
    opacity: 0;
  }
  100% {
    -webkit-transform-origin: left bottom;
    -webkit-transform: none;
    opacity: 1;
  }
}

@keyframes rotate-in-down-left {
  0% {
    transform-origin: left bottom;
    transform: rotate3d(0, 0, 1, -45deg);
    opacity: 0;
  }
  100% {
    transform-origin: left bottom;
    transform: none;
    opacity: 1;
  }
}

.ani.rotate-in-down-left {
  -webkit-animation-name: rotate-in-down-left;
  animation-name: rotate-in-down-left;
}

/**
 * @module rotate
 * @description 定义旋转退出动画
 * @method rotate-out
 */
@-webkit-keyframes rotate-out {
  0% {
    -webkit-transform-origin: center;
    opacity: 1;
  }
  100% {
    -webkit-transform-origin: center;
    -webkit-transform: rotate3d(0, 0, 1, 200deg);
    opacity: 0;
  }
}

@keyframes rotate-out {
  0% {
    transform-origin: center;
    opacity: 1;
  }
  100% {
    transform-origin: center;
    transform: rotate3d(0, 0, 1, 200deg);
    opacity: 0;
  }
}

.ani.rotate-out {
  -webkit-animation-name: rotate-out;
  animation-name: rotate-out;
}

/**
 * @module rotate
 * @description 定义旋转从右向上退出动画
 * @method rotate-out-up-right
 */
@-webkit-keyframes rotate-out-up-right {
  0% {
    -webkit-transform-origin: right bottom;
    opacity: 1;
  }
  100% {
    -webkit-transform-origin: right bottom;
    -webkit-transform: rotate3d(0, 0, 1, 90deg);
    opacity: 0;
  }
}

@keyframes rotate-out-up-right {
  0% {
    transform-origin: right bottom;
    opacity: 1;
  }
  100% {
    transform-origin: right bottom;
    transform: rotate3d(0, 0, 1, 90deg);
    opacity: 0;
  }
}

.ani.rotate-out-up-right {
  -webkit-animation-name: rotate-out-up-right;
  animation-name: rotate-out-up-right;
}

/**
 * @module rotate
 * @description 定义旋转从左向上退出动画
 * @method rotate-out-up-left
 */
@-webkit-keyframes rotate-out-up-left {
  0% {
    -webkit-transform-origin: left bottom;
    opacity: 1;
  }
  100% {
    -webkit-transform-origin: left bottom;
    -webkit-transform: rotate3d(0, 0, 1, -90deg);
    opacity: 0;
  }
}

@keyframes rotate-out-up-left {
  0% {
    transform-origin: left bottom;
    opacity: 1;
  }
  100% {
    transform-origin: left bottom;
    transform: rotate3d(0, 0, 1, -90deg);
    opacity: 0;
  }
}

.ani.rotate-out-up-left {
  -webkit-animation-name: rotate-out-up-left;
  animation-name: rotate-out-up-left;
}

/**
 * @module rotate
 * @description 定义旋转从右往下退出动画
 * @method rotate-out-down-right
 */
@-webkit-keyframes rotate-out-down-right {
  0% {
    -webkit-transform-origin: right bottom;
    opacity: 1;
  }
  100% {
    -webkit-transform-origin: right bottom;
    -webkit-transform: rotate3d(0, 0, 1, -90deg);
    opacity: 0;
  }
}

@keyframes rotate-out-down-right {
  0% {
    transform-origin: right bottom;
    opacity: 1;
  }
  100% {
    transform-origin: right bottom;
    transform: rotate3d(0, 0, 1, -90deg);
    opacity: 0;
  }
}

.ani.rotate-out-down-right {
  -webkit-animation-name: rotate-out-down-right;
  animation-name: rotate-out-down-right;
}

/**
 * @module rotate
 * @description 定义旋转从左往下退出动画
 * @method rotate-out-down-left
 */
@-webkit-keyframes rotate-out-down-left {
  0% {
    -webkit-transform-origin: left bottom;
    opacity: 1;
  }
  100% {
    -webkit-transform-origin: left bottom;
    -webkit-transform: rotate3d(0, 0, 1, 90deg);
    opacity: 0;
  }
}

@keyframes rotate-out-down-left {
  0% {
    transform-origin: left bottom;
    opacity: 1;
  }
  100% {
    transform-origin: left bottom;
    transform: rotate3d(0, 0, 1, 90deg);
    opacity: 0;
  }
}

.ani.rotate-out-down-left {
  -webkit-animation-name: rotate-out-down-left;
  animation-name: rotate-out-down-left;
}

/**
 * @module zoom
 * @description 定义放大进入动画
 * @method zoom-in
 */
@-webkit-keyframes zoom-in {
  0% {
    opacity: 0;
    -webkit-transform: scale3d(0.3, 0.3, 0.3);
  }
  50% {
    opacity: 1;
  }
}

@keyframes zoom-in {
  0% {
    opacity: 0;
    transform: scale3d(0.3, 0.3, 0.3);
  }
  50% {
    opacity: 1;
  }
}

.ani.zoom-in {
  -webkit-animation-name: zoom-in;
  animation-name: zoom-in;
}

/**
 * @module zoom
 * @description 定义放大上升进入动画
 * @method zoom-in-up
 */
@-webkit-keyframes zoom-in-up {
  0% {
    opacity: 0;
    -webkit-transform: scale3d(0.1, 0.1, 0.1) translate3d(0, 1000px, 0);
    -webkit-animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
  }
  60% {
    opacity: 1;
    -webkit-transform: scale3d(0.475, 0.475, 0.475) translate3d(0, -60px, 0);
    -webkit-animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
  }
}

@keyframes zoom-in-up {
  0% {
    opacity: 0;
    transform: scale3d(0.1, 0.1, 0.1) translate3d(0, 1000px, 0);
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
  }
  60% {
    opacity: 1;
    transform: scale3d(0.475, 0.475, 0.475) translate3d(0, -60px, 0);
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
  }
}

.ani.zoom-in-up {
  -webkit-animation-name: zoom-in-up;
  animation-name: zoom-in-up;
}

/**
 * @module zoom
 * @description 定义从右侧放大进入动画
 * @method zoom-in-right
 */
@-webkit-keyframes zoom-in-right {
  0% {
    opacity: 0;
    -webkit-transform: scale3d(0.1, 0.1, 0.1) translate3d(1000px, 0, 0);
    -webkit-animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
  }
  60% {
    opacity: 1;
    -webkit-transform: scale3d(0.475, 0.475, 0.475) translate3d(-10px, 0, 0);
    -webkit-animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
  }
}

@keyframes zoom-in-right {
  0% {
    opacity: 0;
    transform: scale3d(0.1, 0.1, 0.1) translate3d(1000px, 0, 0);
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
  }
  60% {
    opacity: 1;
    transform: scale3d(0.475, 0.475, 0.475) translate3d(-10px, 0, 0);
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
  }
}

.ani.zoom-in-right {
  -webkit-animation-name: zoom-in-right;
  animation-name: zoom-in-right;
}

/**
 * @module zoom
 * @description 定义放大下降进入动画
 * @method zoom-in-down
 */
@-webkit-keyframes zoom-in-down {
  0% {
    opacity: 0;
    -webkit-transform: scale3d(0.1, 0.1, 0.1) translate3d(0, -1000px, 0);
    -webkit-animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
  }
  60% {
    opacity: 1;
    -webkit-transform: scale3d(0.475, 0.475, 0.475) translate3d(0, 60px, 0);
    -webkit-animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
  }
}

@keyframes zoom-in-down {
  0% {
    opacity: 0;
    transform: scale3d(0.1, 0.1, 0.1) translate3d(0, -1000px, 0);
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
  }
  60% {
    opacity: 1;
    transform: scale3d(0.475, 0.475, 0.475) translate3d(0, 60px, 0);
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
  }
}

.ani.zoom-in-down {
  -webkit-animation-name: zoom-in-down;
  animation-name: zoom-in-down;
}

/**
 * @module speed
 * @description 定义从左侧放大进入动画
 * @method speed-in-left
 */
@-webkit-keyframes zoom-in-left {
  0% {
    opacity: 0;
    -webkit-transform: scale3d(0.1, 0.1, 0.1) translate3d(-1000px, 0, 0);
    -webkit-animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
  }
  60% {
    opacity: 1;
    -webkit-transform: scale3d(0.475, 0.475, 0.475) translate3d(10px, 0, 0);
    -webkit-animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
  }
}

@keyframes zoom-in-left {
  0% {
    opacity: 0;
    transform: scale3d(0.1, 0.1, 0.1) translate3d(-1000px, 0, 0);
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
  }
  60% {
    opacity: 1;
    transform: scale3d(0.475, 0.475, 0.475) translate3d(10px, 0, 0);
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
  }
}

.ani.zoom-in-left {
  -webkit-animation-name: zoom-in-left;
  animation-name: zoom-in-left;
}

/**
 * @module zoom
 * @description 定义缩小退出动画
 * @method zoom-out
 */
@-webkit-keyframes zoom-out {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 0;
    -webkit-transform: scale3d(0.3, 0.3, 0.3);
  }
  100% {
    opacity: 0;
  }
}

@keyframes zoom-out {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 0;
    transform: scale3d(0.3, 0.3, 0.3);
  }
  100% {
    opacity: 0;
  }
}

.ani.zoom-out {
  -webkit-animation-name: zoom-out;
  animation-name: zoom-out;
}

/**
 * @module zoom
 * @description 定义上升缩小退出动画
 * @method zoom-out-up
 */
@-webkit-keyframes zoom-out-up {
  40% {
    opacity: 1;
    -webkit-transform: scale3d(0.475, 0.475, 0.475) translate3d(0, 60px, 0);
    -webkit-animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
  }
  100% {
    opacity: 0;
    -webkit-transform: scale3d(0.1, 0.1, 0.1) translate3d(0, -2000px, 0);
    -webkit-transform-origin: center bottom;
    -webkit-animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
  }
}

@keyframes zoom-out-up {
  40% {
    opacity: 1;
    transform: scale3d(0.475, 0.475, 0.475) translate3d(0, 60px, 0);
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
  }
  100% {
    opacity: 0;
    transform: scale3d(0.1, 0.1, 0.1) translate3d(0, -2000px, 0);
    transform-origin: center bottom;
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
  }
}

.ani.zoom-out-up {
  -webkit-animation-name: zoom-out-up;
  animation-name: zoom-out-up;
}

/**
 * @module zoom
 * @description 定义从右往左缩小退出动画
 * @method zoom-out-right
 */
@-webkit-keyframes zoom-out-right {
  40% {
    opacity: 1;
    -webkit-transform: scale3d(0.475, 0.475, 0.475) translate3d(-45px, 0, 0);
  }
  100% {
    opacity: 0;
    -webkit-transform: scale(0.1) translate3d(2000px, 0, 0);
    -webkit-transform-origin: right center;
  }
}

@keyframes zoom-out-right {
  40% {
    opacity: 1;
    transform: scale3d(0.475, 0.475, 0.475) translate3d(-45px, 0, 0);
  }
  100% {
    opacity: 0;
    transform: scale(0.1) translate3d(2000px, 0, 0);
    transform-origin: right center;
  }
}

.ani.zoom-out-right {
  -webkit-animation-name: zoom-out-right;
  animation-name: zoom-out-right;
}

/**
 * @module zoom
 * @description 定义下降缩小退出动画
 * @method zoom-out-down
 */
@-webkit-keyframes zoom-out-down {
  40% {
    opacity: 1;
    -webkit-transform: scale3d(0.475, 0.475, 0.475) translate3d(0, -60px, 0);
    -webkit-animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
  }
  100% {
    opacity: 0;
    -webkit-transform: scale3d(0.1, 0.1, 0.1) translate3d(0, 2000px, 0);
    -webkit-transform-origin: center bottom;
    -webkit-animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
  }
}

@keyframes zoom-out-down {
  40% {
    opacity: 1;
    transform: scale3d(0.475, 0.475, 0.475) translate3d(0, -60px, 0);
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
  }
  100% {
    opacity: 0;
    transform: scale3d(0.1, 0.1, 0.1) translate3d(0, 2000px, 0);
    transform-origin: center bottom;
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
  }
}

.ani.zoom-out-down {
  -webkit-animation-name: zoom-out-down;
  animation-name: zoom-out-down;
}

/**
 * @module zoom
 * @description 定义从左往右缩小退出动画
 * @method zoom-out-left
 */
@-webkit-keyframes zoom-out-left {
  40% {
    opacity: 1;
    -webkit-transform: scale3d(0.475, 0.475, 0.475) translate3d(45px, 0, 0);
  }
  100% {
    opacity: 0;
    -webkit-transform: scale(0.1) translate3d(-2000px, 0, 0);
    -webkit-transform-origin: left center;
  }
}

@keyframes zoom-out-left {
  40% {
    opacity: 1;
    transform: scale3d(0.475, 0.475, 0.475) translate3d(45px, 0, 0);
  }
  100% {
    opacity: 0;
    transform: scale(0.1) translate3d(-2000px, 0, 0);
    transform-origin: left center;
  }
}

.ani.zoom-out-left {
  -webkit-animation-name: zoom-out-left;
  animation-name: zoom-out-left;
}

/**
 * @module other
 * @description 定义闪烁动画
 * @method flash
 */
@-webkit-keyframes flash {
  0%,
  50%,
  100% {
    opacity: 1;
  }
  25%,
  75% {
    opacity: 0;
  }
}

@keyframes flash {
  0%,
  50%,
  100% {
    opacity: 1;
  }
  25%,
  75% {
    opacity: 0;
  }
}

.ani.flash {
  -webkit-animation-name: flash;
  animation-name: flash;
}

/**
 * @module other
 * @description 定义摇动动画
 * @method shake
 */
@-webkit-keyframes shake {
  0%,
  100% {
    -webkit-transform: translate3d(0, 0, 0);
  }
  10%,
  30%,
  50%,
  70%,
  90% {
    -webkit-transform: translate3d(-10px, 0, 0);
  }
  20%,
  40%,
  60%,
  80% {
    -webkit-transform: translate3d(10px, 0, 0);
  }
}

@keyframes shake {
  0%,
  100% {
    transform: translate3d(0, 0, 0);
  }
  10%,
  30%,
  50%,
  70%,
  90% {
    transform: translate3d(-10px, 0, 0);
  }
  20%,
  40%,
  60%,
  80% {
    transform: translate3d(10px, 0, 0);
  }
}

.ani.shake {
  -webkit-animation-name: shake;
  animation-name: shake;
}

/**
 * @module other
 * @description 定义脉冲动画
 * @method pulse
 */
@-webkit-keyframes pulse {
  0% {
    -webkit-transform: scale3d(1, 1, 1);
  }
  50% {
    -webkit-transform: scale3d(1.05, 1.05, 1.05);
  }
  100% {
    -webkit-transform: scale3d(1, 1, 1);
  }
}

@keyframes pulse {
  0% {
    transform: scale3d(1, 1, 1);
  }
  50% {
    transform: scale3d(1.05, 1.05, 1.05);
  }
  100% {
    transform: scale3d(1, 1, 1);
  }
}

.ani.pulse {
  -webkit-animation-name: pulse;
  animation-name: pulse;
}

/**
 * @module other
 * @description 定义橡皮圈挤压回弹动画
 * @method extrusion
 */
@-webkit-keyframes extrusion {
  0% {
    -webkit-transform: scale3d(1, 1, 1);
  }
  30% {
    -webkit-transform: scale3d(0.65, 1.35, 1);
  }
  40% {
    -webkit-transform: scale3d(1.35, 0.65, 1);
  }
  50% {
    -webkit-transform: scale3d(0.85, 1.15, 1);
  }
  65% {
    -webkit-transform: scale3d(1.05, 0.95, 1);
  }
  75% {
    -webkit-transform: scale3d(0.95, 1.05, 1);
  }
  100% {
    -webkit-transform: scale3d(1, 1, 1);
  }
}

@keyframes extrusion {
  0% {
    transform: scale3d(1, 1, 1);
  }
  30% {
    transform: scale3d(0.65, 1.35, 1);
  }
  40% {
    transform: scale3d(1.35, 0.65, 1);
  }
  50% {
    transform: scale3d(0.85, 1.15, 1);
  }
  65% {
    transform: scale3d(1.05, 0.95, 1);
  }
  75% {
    transform: scale3d(0.95, 1.05, 1);
  }
  100% {
    transform: scale3d(1, 1, 1);
  }
}

.ani.extrusion {
  -webkit-animation-name: extrusion;
  animation-name: extrusion;
}

/**
 * @module other
 * @description 定义橡皮圈拉伸回弹动画
 * @method stretch
 */
@-webkit-keyframes stretch {
  0% {
    -webkit-transform: scale3d(1, 1, 1);
  }
  30% {
    -webkit-transform: scale3d(1.25, 0.75, 1);
  }
  40% {
    -webkit-transform: scale3d(0.75, 1.25, 1);
  }
  50% {
    -webkit-transform: scale3d(1.15, 0.85, 1);
  }
  65% {
    -webkit-transform: scale3d(0.95, 1.05, 1);
  }
  75% {
    -webkit-transform: scale3d(1.05, 0.95, 1);
  }
  100% {
    -webkit-transform: scale3d(1, 1, 1);
  }
}

@keyframes stretch {
  0% {
    transform: scale3d(1, 1, 1);
  }
  30% {
    transform: scale3d(1.25, 0.75, 1);
  }
  40% {
    transform: scale3d(0.75, 1.25, 1);
  }
  50% {
    transform: scale3d(1.15, 0.85, 1);
  }
  65% {
    transform: scale3d(0.95, 1.05, 1);
  }
  75% {
    transform: scale3d(1.05, 0.95, 1);
  }
  100% {
    transform: scale3d(1, 1, 1);
  }
}

.ani.stretch {
  -webkit-animation-name: stretch;
  animation-name: stretch;
}

/**
 * @module other
 * @description 定义晃动动画
 * @method swing
 */
@-webkit-keyframes swing {
  20% {
    -webkit-transform: rotate3d(0, 0, 1, 15deg);
  }
  40% {
    -webkit-transform: rotate3d(0, 0, 1, -10deg);
  }
  60% {
    -webkit-transform: rotate3d(0, 0, 1, 5deg);
  }
  80% {
    -webkit-transform: rotate3d(0, 0, 1, -5deg);
  }
  100% {
    -webkit-transform: rotate3d(0, 0, 1, 0deg);
  }
}

@keyframes swing {
  20% {
    transform: rotate3d(0, 0, 1, 15deg);
  }
  40% {
    transform: rotate3d(0, 0, 1, -10deg);
  }
  60% {
    transform: rotate3d(0, 0, 1, 5deg);
  }
  80% {
    transform: rotate3d(0, 0, 1, -5deg);
  }
  100% {
    transform: rotate3d(0, 0, 1, 0deg);
  }
}

.ani.swing {
  -webkit-animation-name: swing;
  animation-name: swing;
}

/**
 * @module other
 * @description 定义吊索动画
 * @method sling
 */
@-webkit-keyframes sling {
  0% {
    -webkit-transform: scale3d(1, 1, 1);
  }
  10%,
  20% {
    -webkit-transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg);
  }
  30%,
  50%,
  70%,
  90% {
    -webkit-transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);
  }
  40%,
  60%,
  80% {
    -webkit-transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);
  }
  100% {
    -webkit-transform: scale3d(1, 1, 1);
  }
}

@keyframes sling {
  0% {
    transform: scale3d(1, 1, 1);
  }
  10%,
  20% {
    transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg);
  }
  30%,
  50%,
  70%,
  90% {
    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);
  }
  40%,
  60%,
  80% {
    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);
  }
  100% {
    transform: scale3d(1, 1, 1);
  }
}

.ani.sling {
  -webkit-animation-name: sling;
  animation-name: sling;
}

/**
 * @module other
 * @description 定义摆动动画
 * @method wobble
 */
@-webkit-keyframes wobble {
  0% {
    -webkit-transform: none;
  }
  15% {
    -webkit-transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg);
  }
  30% {
    -webkit-transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg);
  }
  45% {
    -webkit-transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg);
  }
  60% {
    -webkit-transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg);
  }
  75% {
    -webkit-transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg);
  }
  100% {
    -webkit-transform: none;
  }
}

@keyframes wobble {
  0% {
    transform: none;
  }
  15% {
    transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg);
  }
  30% {
    transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg);
  }
  45% {
    transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg);
  }
  60% {
    transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg);
  }
  75% {
    transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg);
  }
  100% {
    transform: none;
  }
}

.ani.wobble {
  -webkit-animation-name: wobble;
  animation-name: wobble;
}

/**
 * @module other
 * @description 定义悬挂动画
 * @method hinge
 */
@-webkit-keyframes hinge {
  0% {
    -webkit-transform-origin: top left;
    -webkit-animation-timing-function: ease-in-out;
  }
  20%,
  60% {
    -webkit-transform: rotate3d(0, 0, 1, 80deg);
    -webkit-transform-origin: top left;
    -webkit-animation-timing-function: ease-in-out;
  }
  40%,
  80% {
    -webkit-transform: rotate3d(0, 0, 1, 60deg);
    -webkit-transform-origin: top left;
    -webkit-animation-timing-function: ease-in-out;
    opacity: 1;
  }
  100% {
    -webkit-transform: translate3d(0, 700px, 0);
    opacity: 0;
  }
}

@keyframes hinge {
  0% {
    transform-origin: top left;
    animation-timing-function: ease-in-out;
  }
  20%,
  60% {
    transform: rotate3d(0, 0, 1, 80deg);
    transform-origin: top left;
    animation-timing-function: ease-in-out;
  }
  40%,
  80% {
    transform: rotate3d(0, 0, 1, 60deg);
    transform-origin: top left;
    animation-timing-function: ease-in-out;
    opacity: 1;
  }
  100% {
    transform: translate3d(0, 700px, 0);
    opacity: 0;
  }
}

.ani.hinge {
  -webkit-animation-duration: 2s;
  animation-duration: 2s;
  -webkit-animation-name: hinge;
  animation-name: hinge;
}

/**
 * @module element
 * @method yo-btn
 * @version 3.0.0
 * @description 构造按钮的自定义使用方法，勿使用`input`标签，因为边框为`::after`实现
 * @demo http://doyoe.github.io/Yo/demo/element/yo-btn.html
 * @param {String} $name 定义扩展名称 <3.0.0>
 * @param {Length} $border-width 边框厚度 <3.0.0>
 * @param {Color} $border-color 边框色 <3.0.0>
 * @param {Color} $bgcolor 背景色 <3.0.0>
 * @param {Color} $color 文本色 <3.0.0>
 * @param {Color} $touch-border-color 触点（鼠标，手指或其它）按下时边框色 <3.0.0>
 * @param {Color} $touch-bgcolor 触点（鼠标，手指或其它）按下时背景色 <3.0.0>
 * @param {Color} $touch-color 触点（鼠标，手指或其它）按下时文本色 <3.0.0>
 * @param {Length} $padding 内补白 <3.0.0>
 * @param {Length} $radius 圆角半径长度 <3.0.0>
 * @param {Length} $font-size 字号大小 <3.0.0>
 * @param {Length} $width 宽度 <3.0.0>
 * @param {Length} $height 高度 <3.0.0>
 */
.yo-btn {
  display: inline-block;
  padding: 0 1.2em;
  vertical-align: top;
  position: relative;
  border-radius: 0.05rem;
  border: 0 none;
  background-color: #ff801a;
  color: #fff;
  text-align: center;
  cursor: pointer;
}

.yo-btn::after {
  pointer-events: none;
  position: absolute;
  z-index: 999;
  top: 0;
  left: 0;
  overflow: hidden;
  content: "\0020";
  border-color: #d36105;
  border-style: solid;
  border-width: 1px;
  -webkit-transform-origin: 0 0;
  transform-origin: 0 0;
}

@media (max--moz-device-pixel-ratio: 1.49), (-webkit-max-device-pixel-ratio: 1.49), (max-device-pixel-ratio: 1.49), (max-resolution: 143dpi), (max-resolution: 1.49dppx) {
  .yo-btn::after {
    width: 100%;
    height: 100%;
    border-radius: 0.05rem;
  }
}

@media (min--moz-device-pixel-ratio: 1.5) and (max--moz-device-pixel-ratio: 2.49), (-webkit-min-device-pixel-ratio: 1.5) and (-webkit-max-device-pixel-ratio: 2.49), (min-device-pixel-ratio: 1.5) and (max-device-pixel-ratio: 2.49), (min-resolution: 144dpi) and (max-resolution: 239dpi), (min-resolution: 1.5dppx) and (max-resolution: 2.49dppx) {
  .yo-btn::after {
    width: 200%;
    height: 200%;
    -webkit-transform: scale(0.5);
    transform: scale(0.5);
    border-radius: 0.1rem;
  }
}

@media (min--moz-device-pixel-ratio: 2.5), (-webkit-min-device-pixel-ratio: 2.5), (min-device-pixel-ratio: 2.5), (min-resolution: 240dpi), (min-resolution: 2.5dppx) {
  .yo-btn::after {
    width: 300%;
    height: 300%;
    -webkit-transform: scale(0.33333);
    transform: scale(0.33333);
    border-radius: 0.15rem;
  }
}

.yo-btn-disabled {
  opacity: 1;
  cursor: not-allowed;
}

.yo-btn-disabled, .yo-btn-disabled:active {
  background-color: #ffaa67;
  color: white;
}

.yo-btn-disabled::after, .yo-btn-disabled:active::after {
  border-color: #fa7f1c;
}

.yo-btn-s {
  height: 0.28rem;
  line-height: 0.28rem;
  font-size: 0.12rem;
}

.yo-btn-m {
  height: 0.36rem;
  line-height: 0.36rem;
  font-size: 0.14rem;
}

.yo-btn-l {
  height: 0.44rem;
  line-height: 0.44rem;
  font-size: 0.16rem;
}

.yo-btn-stacked {
  display: block;
  width: 100%;
}

html,
body {
  background-color: #0ac2d2;
}

.m-animate {
  height: 100%;
}

.pages {
  position: relative;
  overflow: hidden;
  width: 100%;
  height: 100%;
}

.pages .page {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  overflow: hidden;
  visibility: hidden;
}

.pages .page.current {
  visibility: visible;
  z-index: 1;
}

.pages .page-1 {
  background: #0ac2d2;
}

.pages .page-2 {
  background: #7bb7fa;
}

.pages .page-3 {
  background: #60d7a9;
}

.pages .page-4 {
  background: #fdc162;
}

.pages .page-5 {
  background: #fd6a62;
}

.pages .page-6 {
  background: #f68dbb;
}

.pages .con {
  position: absolute;
  z-index: 2;
  top: 50%;
  left: 50%;
  width: 3rem;
  margin: -1.9rem 0 0 -1.5rem;
}

.pages .con > h1 {
  color: rgba(255, 255, 255, 0.6);
  font-size: .64rem;
}

.pages .con > h2 {
  margin-top: -.2rem;
  color: rgba(0, 0, 0, 0.2);
  font-size: .25rem;
}

.pages .con > p {
  color: rgba(255, 255, 255, 0.9);
  font-size: .36rem;
}

.pages .con > .yo-btn,
.pages .con > select {
  width: 100%;
  height: .44rem;
  margin: .1rem 0;
  padding: 0 .15rem;
  border: 0;
  border-radius: .02rem;
  line-height: .44rem;
  box-shadow: 0 0.03rem 0 rgba(0, 0, 0, 0.1);
  background: #fff;
  color: #aaa;
  cursor: pointer;
  font-size: .16rem;
}

.pages .con .yo-btn {
  font-weight: bold;
}

.pages .con .yo-btn::after {
  border-width: 0;
}

.pages .con > select {
  -webkit-appearance: none;
  appearance: none;
  text-transform: capitalize;
  background-size: .1rem .1rem;
  background-repeat: no-repeat;
  background-position: right .1rem center;
  background-image: radial-gradient(circle, #0ac2d2, #0ac2d2 50%, transparent, transparent);
}
